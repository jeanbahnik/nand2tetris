// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then
 * the in value is loaded into the memory location specified by address
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // Put your code here:
    DMux8Way(in=load, sel=address, a=DMux8Waya, b=DMux8Wayb, c=DMux8Wayc, d=DMux8Wayd, e=DMux8Waye, f=DMux8Wayf,
      g=DMux8Wayg, h=DMux8Wayh);
    Register(in=in, load=DMux8Waya, out=Register0);
    Register(in=in, load=DMux8Wayb, out=Register1);
    Register(in=in, load=DMux8Wayc, out=Register2);
    Register(in=in, load=DMux8Wayd, out=Register3);
    Register(in=in, load=DMux8Waye, out=Register4);
    Register(in=in, load=DMux8Wayf, out=Register5);
    Register(in=in, load=DMux8Wayg, out=Register6);
    Register(in=in, load=DMux8Wayh, out=Register7);
    Mux8Way16(a=Register0, b=Register1, c=Register2, d=Register3, e=Register4, f=Register5, g=Register6,
      h=Register7, sel=address, out=out);
}
